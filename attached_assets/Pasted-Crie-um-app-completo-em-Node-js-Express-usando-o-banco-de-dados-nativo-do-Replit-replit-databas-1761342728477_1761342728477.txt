Crie um app completo em Node.js + Express, usando o banco de dados nativo do Replit (@replit/database).  
Objetivo: SaaS de consultoria financeira com √°rea de login para consultores, clientes e importa√ß√£o de dados via OFX.  

Inclua TUDO no mesmo arquivo (server.js).  
O c√≥digo deve rodar no Replit com `npm start` e funcionar sem ajustes manuais.  

====================================================
üì¶ DEPEND√äNCIAS
====================================================
- express  
- express-session  
- multer  
- ofx-parse  
- @replit/database  
- csv-parse/sync  

====================================================
üß± ESTRUTURA DE DADOS
====================================================
- users: { [email]: { password, role ("consultor" | "cliente"), name, clients: [clientIds] } }
- clients: { [clientId]: { name, email, assignedTo } }
- transactions_${clientId}: [
    { id, date (DD/MM/YYYY), desc, amount, category, fitid, sourceHash }
  ]

====================================================
üîê AUTENTICA√á√ÉO E √ÅREA DO CONSULTOR
====================================================
- Tela de login (HTML simples, rota GET /login e POST /login).  
- Ap√≥s login, cria sess√£o Express.  
- Usu√°rios consultores podem ver lista de clientes sob sua responsabilidade (/dashboard).  
- Para cada cliente, link para /client/:id com lista de transa√ß√µes.

====================================================
üíæ IMPORTA√á√ÉO OFX E CSV
====================================================
POST /api/import/ofx  
- Upload de arquivo OFX (campo ‚Äúofx‚Äù) e clientId.  
- Gera hash SHA256 do arquivo.  
- Se j√° houver transa√ß√µes com o mesmo hash em transactions_${clientId}, recusa upload (arquivo duplicado).  
- Faz parse com ofx-parse.  
- Converte data para formato DD/MM/YYYY.  
- Deduplica por fitid.  
- Armazena transa√ß√µes no DB.

POST /api/import/csv (fallback simples)
- Upload CSV com campos: date,desc,amount,category(opcional).  
- Deduplica por combina√ß√£o (date+desc+amount).  
- Converte data para DD/MM/YYYY.  

====================================================
üßæ CATEGORIZA√á√ÉO E EDI√á√ÉO DE TRANSA√á√ïES
====================================================
GET /api/transactions?clientId=...  
- Lista todas as transa√ß√µes do cliente (ordenadas por data desc).

POST /api/transactions/update  
Body: { clientId, transactionId, category?, desc?, amount? }  
- Atualiza categoria e/ou campos da transa√ß√£o.  

====================================================
üß† L√ìGICA DE DUPLICIDADE
====================================================
- Cada transa√ß√£o OFX tem um campo `fitid`.  
- Se j√° existir o mesmo `fitid` no cliente, ignora.  
- Cada upload OFX gera `sourceHash`.  
- Se `sourceHash` j√° existir no DB, rejeita upload.  

====================================================
üìÖ FORMATA√á√ÉO DE DATAS
====================================================
- Toda data exibida ao usu√°rio deve estar no formato DD/MM/YYYY.  
- No backend, as datas devem ser normalizadas para UTC antes da convers√£o.

====================================================
üìÑ INTERFACE HTML SIMPLES
====================================================
- /login ‚Üí formul√°rio de login.  
- /dashboard ‚Üí lista de clientes (somente consultor autenticado).  
- /client/:id ‚Üí mostra tabela de transa√ß√µes, bot√£o de upload OFX e bot√µes para editar/categorizar.  
- Estiliza√ß√£o m√≠nima (HTML + CSS inline).  

====================================================
‚öôÔ∏è RODAR
====================================================
- Mostra no console:  
  üöÄ App Economia Di√°ria rodando na porta 3000  
  üåê Acesse http://localhost:3000/login  

====================================================
üí° DETALHES T√âCNICOS
====================================================
- C√≥digo todo em portugu√™s, com coment√°rios claros.  
- N√£o usar frameworks adicionais (Nest, React, etc.).  
- Apenas depend√™ncias listadas.  
- Respostas em JSON para API e HTML simples para interface.  
- C√≥digos de erro claros para duplicidade e login incorreto.  