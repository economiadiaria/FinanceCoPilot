openapi: 3.1.0
info:
  title: PJ Banking API
  version: 1.0.0
  contact:
    name: Finance CoPilot Engineering
    email: engineering@financecopilot.local
  description: |
    OpenAPI specification describing the PJ banking endpoints exposed by the
    Finance CoPilot backend. These routes power bank account discovery,
    transaction browsing and financial summaries for PJ clients.
servers:
  - url: https://api.financecopilot.local
    description: Example production-like environment
  - url: http://localhost:3000
    description: Local development server
tags:
  - name: PJ Banking
    description: Endpoints that expose PJ-specific banking capabilities
paths:
  /api/pj/accounts:
    get:
      tags: [PJ Banking]
      summary: List bank accounts available for the authenticated PJ client
      description: |
        Returns the bank accounts that are available to the authenticated PJ
        client. Only a subset of bank account fields is exposed to avoid
        leaking sensitive identifiers.
      responses:
        '200':
          description: Bank accounts successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while retrieving accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/pj/transactions:
    get:
      tags: [PJ Banking]
      summary: List paginated bank transactions for a PJ client account
      description: |
        Returns the paginated bank transactions imported for a specific PJ
        bank account. Transactions are filtered by the optional period and
        sorted by posting date.
      parameters:
        - $ref: '#/components/parameters/ClientIdQuery'
        - $ref: '#/components/parameters/BankAccountIdQuery'
        - $ref: '#/components/parameters/FromDateQuery'
        - $ref: '#/components/parameters/ToDateQuery'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/LimitQuery'
        - $ref: '#/components/parameters/SortQuery'
      responses:
        '200':
          description: Bank transactions successfully retrieved
          headers:
            ETag:
              description: Strong ETag associated with the response payload
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransactionListResponse'
        '304':
          description: Resource not modified since the provided ETag
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Authenticated user does not have access to the bank account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested bank account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while retrieving transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/pj/summary:
    get:
      tags: [PJ Banking]
      summary: Retrieve aggregated cash-flow summary for a PJ client account
      description: |
        Calculates aggregated totals, KPIs and daily net flow series for a PJ
        bank account inside the requested date range. When the date range is
        omitted the backend automatically expands it to the available
        transaction history.
      parameters:
        - $ref: '#/components/parameters/ClientIdQuery'
        - $ref: '#/components/parameters/BankAccountIdQuery'
        - $ref: '#/components/parameters/FromDateQuery'
        - $ref: '#/components/parameters/ToDateQuery'
      responses:
        '200':
          description: Summary successfully generated
          headers:
            ETag:
              description: Strong ETag associated with the response payload
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryResponse'
        '304':
          description: Resource not modified since the provided ETag
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Authenticated user does not have access to the bank account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested bank account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while generating the summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/pj/global-categories:
    get:
      tags: [PJ Banking]
      summary: List PJ global categories
      description: |
        Returns the catalog of global PJ plan categories. When the `tree`
        parameter is enabled the response is structured as a hierarchical tree
        sorted by `sortOrder` and name. Otherwise the categories are returned
        as a flat list with empty `children` arrays.
      parameters:
        - $ref: '#/components/parameters/TreeQuery'
      responses:
        '200':
          description: Global categories successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PjCategoryTreeResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Only master users may access the global catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while fetching categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags: [PJ Banking]
      summary: Create a PJ global category
      description: Creates a new global PJ plan category under the optional parent.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PjGlobalCategoryCreate'
      responses:
        '201':
          description: Global category successfully created
          content:
            application/json:
              schema:
                type: object
                required: [category]
                properties:
                  category:
                    $ref: '#/components/schemas/PjGlobalCategoryNode'
        '400':
          description: Invalid payload supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Only master users may manage the global catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: A category with the same code already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while creating the category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/pj/global-categories/{categoryId}:
    parameters:
      - $ref: '#/components/parameters/CategoryIdPath'
    patch:
      tags: [PJ Banking]
      summary: Update a PJ global category
      description: Updates mutable fields of a global PJ category. Core categories cannot be changed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PjGlobalCategoryUpdate'
      responses:
        '200':
          description: Category successfully updated
          content:
            application/json:
              schema:
                type: object
                required: [category]
                properties:
                  category:
                    $ref: '#/components/schemas/PjGlobalCategoryNode'
        '400':
          description: Invalid payload or hierarchy change would create a cycle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Core categories cannot be edited or the user lacks permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while updating the category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags: [PJ Banking]
      summary: Delete a PJ global category
      description: Removes a non-core global category without children.
      responses:
        '204':
          description: Category successfully removed
        '400':
          description: Category still has dependent children
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Core categories cannot be removed or the user lacks permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while deleting the category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/pj/{clientId}/categories:
    parameters:
      - $ref: '#/components/parameters/ClientIdPath'
    get:
      tags: [PJ Banking]
      summary: List PJ client categories
      description: |
        Returns the PJ client categories associated with the given client. When
        `tree=true` the response is structured as a hierarchical tree sorted by
        `sortOrder` and name, otherwise the categories are returned as a flat
        list with empty `children` arrays.
      parameters:
        - $ref: '#/components/parameters/TreeQuery'
      responses:
        '200':
          description: Client categories successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PjCategoryTreeResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: User is not allowed to access the client categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while fetching categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags: [PJ Banking]
      summary: Create a PJ client category
      description: Creates a new PJ client category optionally linked to a base global category.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PjClientCategoryCreate'
      responses:
        '201':
          description: Client category successfully created
          content:
            application/json:
              schema:
                type: object
                required: [category]
                properties:
                  category:
                    $ref: '#/components/schemas/PjClientCategoryNode'
        '400':
          description: Invalid payload supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: User is not allowed to manage the client categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while creating the category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/pj/{clientId}/categories/{categoryId}:
    parameters:
      - $ref: '#/components/parameters/ClientIdPath'
      - $ref: '#/components/parameters/CategoryIdPath'
    patch:
      tags: [PJ Banking]
      summary: Update a PJ client category
      description: Updates mutable fields of a client category. Categories linked to core global categories cannot be changed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PjClientCategoryUpdate'
      responses:
        '200':
          description: Client category successfully updated
          content:
            application/json:
              schema:
                type: object
                required: [category]
                properties:
                  category:
                    $ref: '#/components/schemas/PjClientCategoryNode'
        '400':
          description: Invalid payload or hierarchy change would create a cycle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Category linked to a core template or user lacks permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Category or client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while updating the category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags: [PJ Banking]
      summary: Delete a PJ client category
      description: Removes a non-core PJ client category that has no children.
      responses:
        '204':
          description: Client category successfully removed
        '400':
          description: Category still has dependent children
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Category linked to a core template or user lacks permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Category or client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while deleting the category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  parameters:
    ClientIdQuery:
      name: clientId
      in: query
      required: true
      description: Unique identifier for the PJ client
      schema:
        type: string
        minLength: 1
    BankAccountIdQuery:
      name: bankAccountId
      in: query
      required: true
      description: Unique identifier for the bank account that must be accessible by the authenticated user
      schema:
        type: string
        minLength: 1
    FromDateQuery:
      name: from
      in: query
      required: false
      description: Start of the reporting window in DD/MM/YYYY format
      schema:
        type: string
        pattern: '^\d{2}/\d{2}/\d{4}$'
    ToDateQuery:
      name: to
      in: query
      required: false
      description: End of the reporting window in DD/MM/YYYY format
      schema:
        type: string
        pattern: '^\d{2}/\d{2}/\d{4}$'
    PageQuery:
      name: page
      in: query
      required: false
      description: Results page to return (defaults to 1)
      schema:
        type: integer
        minimum: 1
    LimitQuery:
      name: limit
      in: query
      required: false
      description: Number of items per page (defaults to 50, capped at 200)
      schema:
        type: integer
        minimum: 1
        maximum: 200
    SortQuery:
      name: sort
      in: query
      required: false
      description: Sort direction for the transaction date
      schema:
        type: string
        enum: [asc, desc]
        default: desc
    TreeQuery:
      name: tree
      in: query
      required: false
      description: When set to true returns categories structured as a hierarchy
      schema:
        type: boolean
        default: false
    ClientIdPath:
      name: clientId
      in: path
      required: true
      description: Unique identifier for the PJ client
      schema:
        type: string
        minLength: 1
    CategoryIdPath:
      name: categoryId
      in: path
      required: true
      description: Unique identifier of the category being manipulated
      schema:
        type: string
        minLength: 1
  schemas:
    ErrorResponse:
      type: object
      required: [error]
      properties:
        error:
          type: string
          description: Human-readable description of the problem
    BankAccountSummary:
      type: object
      required:
        - id
        - bankName
        - accountNumberMask
        - accountType
        - currency
        - isActive
      properties:
        id:
          type: string
          description: Bank account identifier
        bankName:
          type: string
          description: Display name of the bank
        accountNumberMask:
          type: string
          description: Masked bank account number where only the last digits are visible
        accountType:
          type: string
          description: Type of the bank account (e.g. corrente, poupanca)
        currency:
          type: string
          description: ISO currency code (e.g. BRL)
        isActive:
          type: boolean
          description: Indicates whether the account is active and available for ingestion
    AccountsResponse:
      type: object
      required: [accounts]
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountSummary'
    BankTransaction:
      type: object
      required:
        - bankTxId
        - date
        - desc
        - amount
        - bankAccountId
        - linkedLegs
        - reconciled
      properties:
        bankTxId:
          type: string
          description: Unique identifier assigned to the transaction inside Finance CoPilot
        date:
          type: string
          description: Transaction posting date in DD/MM/YYYY format
        desc:
          type: string
          description: Raw description obtained from the bank statement
        amount:
          type: number
          description: Positive values are inflows, negative values are outflows
        bankAccountId:
          type: string
          description: Identifier of the bank account that owns the transaction
        accountId:
          type: string
          nullable: true
          description: Identifier provided by the originating bank, when available
        fitid:
          type: string
          nullable: true
          description: Unique identifier provided by the OFX file
        sourceHash:
          type: string
          nullable: true
          description: SHA256 hash of the imported OFX file used for deduplication
        linkedLegs:
          type: array
          description: Sale legs that were reconciled against this transaction
          items:
            type: object
            required: [saleLegId]
            properties:
              saleLegId:
                type: string
              nParcela:
                type: integer
                nullable: true
        reconciled:
          type: boolean
          description: Indicates whether the transaction is reconciled with a sale
        categorizedAs:
          type: object
          nullable: true
          properties:
            group:
              type: string
              nullable: true
            subcategory:
              type: string
              nullable: true
            categoryId:
              type: string
              nullable: true
              description: Identifier of the PJ client category applied to the transaction
            categoryPath:
              type: string
              nullable: true
              description: Hierarchical path (dot notation) of the PJ client category when categorized
            auto:
              type: boolean
              description: Indicates whether the categorization was automatic
              default: false
        dfcCategory:
          type: string
          nullable: true
          description: Legacy DFC category associated with the transaction
        dfcItem:
          type: string
          nullable: true
          description: Legacy DFC item associated with the transaction
        categorizedBy:
          type: string
          nullable: true
          description: Categorization source (manual, rule, auto)
        categorizedRuleId:
          type: string
          nullable: true
          description: Identifier of the rule used for categorization when applicable
    Pagination:
      type: object
      required:
        - page
        - limit
        - totalItems
        - totalPages
        - hasNextPage
        - hasPreviousPage
      properties:
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
        totalItems:
          type: integer
          minimum: 0
        totalPages:
          type: integer
          minimum: 0
        hasNextPage:
          type: boolean
        hasPreviousPage:
          type: boolean
    BankTransactionListResponse:
      type: object
      required: [items, pagination]
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/BankTransaction'
        pagination:
          $ref: '#/components/schemas/Pagination'
    DailyNetFlow:
      type: object
      required: [date, net]
      properties:
        date:
          type: string
          description: Day of the aggregated cash flow in DD/MM/YYYY format
        net:
          type: number
          description: Net cash flow for the day (positive for inflow, negative for outflow)
    SummaryResponse:
      type: object
      required:
        - clientId
        - bankAccountId
        - totals
        - kpis
        - series
        - metadata
      properties:
        clientId:
          type: string
        bankAccountId:
          type: string
        from:
          type: string
          nullable: true
          description: Start of the effective analysis window in DD/MM/YYYY format
        to:
          type: string
          nullable: true
          description: End of the effective analysis window in DD/MM/YYYY format
        totals:
          type: object
          required: [totalIn, totalOut, balance]
          properties:
            totalIn:
              type: number
            totalOut:
              type: number
            balance:
              type: number
        kpis:
          type: object
          required:
            - inflowCount
            - outflowCount
            - averageTicketIn
            - averageTicketOut
            - largestIn
            - largestOut
            - averageDailyNetFlow
            - cashConversionRatio
            - receivableAmount
            - receivableCount
            - overdueReceivableAmount
            - overdueReceivableCount
            - projectedBalance
          properties:
            inflowCount:
              type: integer
            outflowCount:
              type: integer
            averageTicketIn:
              type: number
            averageTicketOut:
              type: number
            largestIn:
              type: number
            largestOut:
              type: number
            averageDailyNetFlow:
              type: number
            cashConversionRatio:
              type: number
            receivableAmount:
              type: number
            receivableCount:
              type: integer
            overdueReceivableAmount:
              type: number
            overdueReceivableCount:
              type: integer
            projectedBalance:
              type: number
        series:
          type: object
          required: [dailyNetFlows]
          properties:
            dailyNetFlows:
              type: array
              items:
                $ref: '#/components/schemas/DailyNetFlow'
        metadata:
          type: object
          required:
            - transactionCount
            - coverageDays
            - generatedAt
          properties:
            transactionCount:
              type: integer
            coverageDays:
              type: integer
            generatedAt:
              type: string
              format: date-time
    PjCategoryTreeResponse:
      type: object
      required: [type, categories]
      properties:
        type:
          type: string
          enum: [global, client]
        categories:
          type: array
          items:
            $ref: '#/components/schemas/PjCategoryTreeNode'
    PjCategoryTreeNode:
      type: object
      required:
        - id
        - name
        - parentId
        - acceptsPostings
        - level
        - path
        - sortOrder
        - children
        - type
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
        acceptsPostings:
          type: boolean
        level:
          type: integer
        path:
          type: string
        sortOrder:
          type: integer
        type:
          type: string
          enum: [global, client]
        code:
          type: string
          nullable: true
        isCore:
          type: boolean
          nullable: true
        baseCategoryId:
          type: string
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/PjCategoryTreeNode'
    PjGlobalCategoryNode:
      allOf:
        - $ref: '#/components/schemas/PjCategoryTreeNode'
        - type: object
          properties:
            type:
              type: string
              enum: [global]
            code:
              type: string
              nullable: false
            isCore:
              type: boolean
    PjClientCategoryNode:
      allOf:
        - $ref: '#/components/schemas/PjCategoryTreeNode'
        - type: object
          properties:
            type:
              type: string
              enum: [client]
            baseCategoryId:
              type: string
              nullable: true
    PjGlobalCategoryCreate:
      type: object
      required: [code, name]
      properties:
        code:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
        acceptsPostings:
          type: boolean
        sortOrder:
          type: integer
    PjGlobalCategoryUpdate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
        acceptsPostings:
          type: boolean
        sortOrder:
          type: integer
    PjClientCategoryCreate:
      type: object
      required: [name]
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
        baseCategoryId:
          type: string
          nullable: true
        acceptsPostings:
          type: boolean
        sortOrder:
          type: integer
    PjClientCategoryUpdate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
        acceptsPostings:
          type: boolean
        sortOrder:
          type: integer
